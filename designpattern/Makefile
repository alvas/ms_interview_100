# The following command use Makefile to create cpp file from the rest 24 patterns, except AbstractFactory:
# $grep cpp Makefile | tail -n 24 | awk '{print $(NF)}' | xargs touch
#
# The source code example is from https://sourcemaking.com/design_patterns
# creational patterns
AbstractFactory:
	g++ -DSIMPLE AbstractFactory.cpp

Builder:
	g++ Builder.cpp

FactoryMethod:
	g++ FactoryMethod.cpp

Prototype:
	g++ Prototype.cpp

Singleton:
	g++ Singleton.cpp

ObjectPool:
	g++ ObjectPool.cpp


# structural patterns
Adaptor:
	g++ Adaptor.cpp

Composite:
	g++ Composite.cpp

Decorator:
	g++ Decorator.cpp

Facade:
	g++ Facade.cpp

Flyweight:
	g++ Flyweight.cpp

Proxy:
	g++ Proxy.cpp

PrivateClassData:
	g++ PrivateClassData.cpp


# behavioral patterns
ChainOfResponsibility:
	g++ ChainOfResponsibility.cpp

Command:
	g++ Command.cpp

Interpreter:
	g++ Interpreter.cpp

Iterator:
	g++ Iterator.cpp

Mediator:
	g++ Mediator.cpp

Memento:
	g++ Memento.cpp

Observer:
	g++ Observer.cpp

State:
	g++ State.cpp

Strategy:
	g++ Strategy.cpp

TemplateMethod:
	g++ TemplateMethod.cpp

Visitor:
	g++ Visitor.cpp

NullObject:
	g++ NullObject.cpp
